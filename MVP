
https://juejin.im/entry/582ad543570c35006cdc812a

https://www.jianshu.com/p/0ad99e598dba

https://juejin.im/post/5bf787d5e51d450c487d06dd

# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile



# ==================================================基本指令==================================================

# 代码混淆压缩比,在0~7之间,默认为5,一般不做修改
-optimizationpasses 5

# 混淆时不使用大小写混合,混合后的类名为小写
-dontusemixedcaseclassnames

# 指定不去忽略非公共库的类
-dontskipnonpubliclibraryclasses

# 这句话能够使我们的项目混淆后产生映射文件,包含有类名->混淆后类名的映射关系
-verbose

# 指定不去忽略非公共库的类成员
-dontskipnonpubliclibraryclassmembers

# 不做预校验,preverify是proguard的四个步骤之一,Android不需要preverify,去掉这一步能够加快混淆速度。
-dontpreverify

# 保留Annotation不混淆
-keepattributes *Annotation*,InnerClasses

# 避免混淆泛型
-keepattributes Signature

# 抛出异常时保留代码行号
-keepattributes SourceFile,LineNumberTable

# 指定混淆是采用的算法,后面的参数是一个过滤器,这个过滤器是谷歌推荐的算法,一般不做更改
-optimizations !code/simplification/cast,!field/*,!class/merging/*



# ==================================================需要保留的公共部分==================================================

# 保留我们使用的四大组件,自定义的Application等等这些类不被混淆,因为这些子类都有可能被外部调用
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Appliction
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class * extends android.view.View
-keep public class com.android.vending.licensing.ILicensingService

# 保留support下的所有类及其内部类
-keep class android.support.** {*;}

# 保留继承的
-keep public class * extends android.support.v4.**
-keep public class * extends android.support.v7.**
-keep public class * extends android.support.annotation.**

# 保留R下面的资源
-keep class **.R$* {*;}

# 保留本地native方法不被混淆
-keepclasseswithmembernames class * {
    native <methods>;
}

# 保留在Activity中的方法参数是view的方法,这样以来我们在layout中写的onClick就不会被影响
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# 保留枚举类不被混淆
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# 保留我们自定义控件(继承自View)不被混淆
-keep public class * extends android.view.View {
    *** get*();
    void set*(***);
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
}

# 保留Parcelable序列化类不被混淆
-keep class * implements android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}

# 保留Serializable序列化的类不被混淆
-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    !private <fields>;
    !private <methods>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# 对于带有回调函数的onXXEvent,**On*Listener的不能被混淆
-keepclassmembers class * {
    void *(**On*Event);
    void *(**On*Listener);
}

# webView处理,项目中没有使用到webView忽略即可
-keepclassmembers class fqcn.of.javascript.interface.for.webview {
    public *;
}
-keepclassmembers class * extends android.webkit.webViewClient {
    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);
    public boolean *(android.webkit.WebView, java.lang.String);
}
-keepclassmembers class * extends android.webkit.webViewClient {
    public void *(android.webkit.webView, jav.lang.String);
}

# 移除Log类打印各个等级日志的代码,一定不要加-dontoptimize才起作用,另外的一种实现方案是通过BuildConfig.DEBUG的变量来控制
#-assumenosideeffects class android.util.Log {
# public static int i(...);
# public static int w(...);
# public static int d(...);
# public static int e(...);
#}



# ==================================================特殊处理部分==================================================

# 处理实体类,在开发的时候我们可以将所有的实体类放在一个包内,这样只需要写一次混淆
#-keep com.innotron.application.bean.** {
# public void set*(***);
# public *** get*();
# public *** is*();
#}

# 处理js交互

# 处理反射类
# Base64
-dontwarn com.cxmt.emp.util.**
-keep class com.cxmt.emp.util.** {*;}

-dontwarn com.cxmt.emp.net.**
-keep class com.cxmt.emp.net.** {*;}


# ==================================================处理第三方依赖库==================================================

# okhttp3,okio
-dontwarn okhttp3.**
-dontwarn okio.**
-dontwarn javax.annotation.**
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# retrofit2
-dontnote retrofit2.Platform
-dontnote retrofit2.Platform$IOS$MainThreadExecutor
-dontwarn retrofit2.Platform$Java8
-keepattributes Signature
-keepattributes Exceptions

# glide
-dontwarn com.bumptech.glide.load.resource.bitmap.VideoDecoder
-keep public class * implements com.bumptech.glide.module.GlideModule
-keep public class * extends com.bumptech.glide.module.AppGlideModule
-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}










    dataBinding {
        enabled true
    }

    // 签名密钥
    signingConfigs {
        signingConfig {
            keyAlias 'tron'
            keyPassword 'ron'
            storeFile file('D:/.jks')
            storePassword 'on'
        }
    }

    buildTypes {
        // 开发环境
        debug {
            buildConfigField('String', 'TYPE', '"_开发版"') // 版本类型
            buildConfigField('String', 'URL', '":5000/"')  // 服务器地址
            debuggable true    // 日志打印
            minifyEnabled true // 混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingConfig
        }
        // 正式环境测试
        m_test {
            buildConfigField('String', 'TYPE', '"_测试版"')
            buildConfigField('String', 'URL', '"om/"')
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingConfig
        }
        // 生产环境
        release {
            buildConfigField('String', 'TYPE', '""')
            buildConfigField('String', 'URL', '"on.com/"')
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingConfig
        }
    }

    // 设置apk文件的名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = rootProject.getName() + "_" + buildType.name + "_" + defaultConfig.versionName + "." + defaultConfig.versionCode + ".apk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:palette-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    // BottomNavigationBar
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.5'

    // RefreshLayout
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'

    // ProgressBar
    implementation 'com.github.ybq:Android-SpinKit:1.1.0'

    // Banner
    implementation 'com.youth.banner:banner:1.4.10'

    // DBflow
    implementation 'com.github.Raizlabs.DBFlow:dbflow:4.2.4'
    implementation 'com.github.Raizlabs.DBFlow:dbflow-core:4.2.4'
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:4.2.4"
    implementation 'com.github.Raizlabs.DBFlow:dbflow-sqlcipher:4.2.4'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9@aar'

    // 下拉菜单
    implementation 'com.github.dongjunkun:DropDownMenu:1.0.4'

    // 腾讯信鸽消息推送服务
    implementation 'com.tencent.xinge:xinge:4.0.3-release'
    implementation 'com.tencent.jg:jg:1.1'
    implementation 'com.tencent.mid:mid:4.0.7'
    implementation 'com.tencent.wup:wup:1.0.0.E-release'

    // 高德地图
    implementation 'com.amap.api:3dmap:6.5.0'
    implementation 'com.amap.api:search:6.1.0'
    implementation 'com.amap.api:location:4.3.0'

    // 汉字转拼音
    implementation files('libs/pinyin4j-2.5.0.jar')
}
